<?xml version="1.0"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2001 - 2005 ivata limited.
// All rights reserved.
// =========================================================
// ivata groupware may be redistributed under the GNU General Public
// License as published by the Free Software Foundation;
// version 2 of the License.
//
// These programs are free software; you can redistribute them and/or
// modify them under the terms of the GNU General Public License
// as published by the Free Software Foundation; version 2 of the License.
//
// These programs are distributed in the hope that they will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
//
// See the GNU General Public License in the file LICENSE.txt for more
// details.
//
// If you would like a copy of the GNU General Public License write to
//
// Free Software Foundation, Inc.
// 59 Temple Place - Suite 330
// Boston, MA 02111-1307, USA.
//
//
// To arrange commercial support and licensing, contact ivata at
//                  http://www.ivata.com/contact.jsp
//
////////////////////////////////////////////////////////////////////////////////
//
// $Log: maven.xml,v $
// Revision 1.3  2005/04/11 09:02:59  colinmacleod
// Added exclude for the cache file (after reported
// probs on JBoss)
//
// Revision 1.2  2005/04/09 17:19:41  colinmacleod
// Changed copyright text to GPL v2 explicitly.
//
// Revision 1.1.1.1  2005/03/10 17:48:56  colinmacleod
// Restructured ivata op around Hibernate/PicoContainer.
// Renamed ivata groupware.
//
// Revision 1.2  2004/09/30 15:00:35  colinmacleod
// Added search index.
//
// Revision 1.1  2004/07/13 19:48:09  colinmacleod
// Moved project to POJOs from EJBs.
// Applied PicoContainer to services layer (replacing session EJBs).
// Applied Hibernate to persistence layer (replacing entity EJBs).
//
////////////////////////////////////////////////////////////////////////////////
-->

<project
    xmlns:ant="jelly:ant"
    xmlns:artifact="artifact"
    xmlns:bsh="jelly:beanshell"
    default="hibernate:install">
  <goal name="hibernate:install">
    <ant:mkdir dir="${maven.xdoclet.hibernatedoclet.destdir}"/>
    <!-- first copy all the java files we might want -->
    <!-- ok - this is very ugly, but how else to do it? -->
    <ant:mkdir dir="${maven.build.dir}/src/java"/>
    <ant:copy todir="${maven.build.dir}/src/java">
      <ant:fileset dir="${basedir}/../addressbook/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../calendar/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../core/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../library/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../search/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../security/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../webmail/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
    </ant:copy>

    <!-- let xdoclet generate the hbm.xml files -->
    <attainGoal name="xdoclet:hibernatedoclet"/>
    <!-- copy over the hibernate config file -->
    <ant:copy todir="${maven.xdoclet.hibernatedoclet.destdir}">
      <ant:fileset dir="${basedir}/src/xml">
        <ant:include name="**/*"/>
      </ant:fileset>
    </ant:copy>
    <!-- now build a jar with all the results in -->
    <ant:jar
        destfile="${maven.build.dir}/${maven.final.name}.jar"
        compress="true">
      <!--
        jboss doesn't like the cache file - if you know you don't want
        jboss support, you might want to remove the excludes
      -->
      <ant:zipfileset
          dir="${maven.xdoclet.hibernatedoclet.destdir}"
          excludes="ehcache.xml"/>
    </ant:jar>
    <artifact:install
        artifact="${maven.build.dir}/${maven.final.name}.jar"
        type="jar"
        project="${pom}"/>
  </goal>
</project>

