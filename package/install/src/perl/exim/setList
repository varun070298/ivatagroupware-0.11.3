#!/usr/bin/perl -Uw
################################################################################
# $Id: setList,v 1.2 2005/04/09 17:19:52 colinmacleod Exp $
#
# Set up a mailing list in the exim server. NB: to make this work, you  will
# need to add the necessary lines to /etc/exim.conf.
#
# To allow the user which runs this and the other system scripts, the script
# must be run in root user mode. This is achieved by running the sudo program
# which must be installed on the system.
#
# Since: ivata groupware 0.9 (2002-07-21)
# Author: Colin MacLeod <colin.macleod@ivata.com>
# $Revision: 1.2 $
#
################################################################################
# Copyright (c) 2001 - 2005 ivata limited.
# All rights reserved.
# ---------------------------------------------------------
# ivata groupware may be redistributed under the GNU General Public
# License as published by the Free Software Foundation;
# version 2 of the License.
#
# These programs are free software; you can redistribute them and/or
# modify them under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 of the License.
#
# These programs are distributed in the hope that they will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU General Public License in the file LICENSE.txt for more
# details.
#
# If you would like a copy of the GNU General Public License write to
#
# Free Software Foundation, Inc.
# 59 Temple Place - Suite 330
# Boston, MA 02111-1307, USA.
#
#
# To arrange commercial support and licensing, contact ivata at
#                  http://www.ivata.com/contact.jsp
################################################################################
#
# $Log: setList,v $
# Revision 1.2  2005/04/09 17:19:52  colinmacleod
# Changed copyright text to GPL v2 explicitly.
#
# Revision 1.1.1.1  2005/03/10 17:49:17  colinmacleod
# Restructured ivata op around Hibernate/PicoContainer.
# Renamed ivata groupware.
#
# Revision 1.2  2004/03/21 21:16:32  colinmacleod
# Shortened name to ivata op.
#
# Revision 1.1  2004/02/05 21:54:07  colinmacleod
# Moved from webmail subproject.
#
# Revision 1.1.1.1  2004/01/27 20:59:58  colinmacleod
# Moved ivata op to sourceforge.
#
# Revision 1.2  2003/10/15 14:11:33  colin
# fixing for XDoclet
#
# Revision 1.1  2003/02/24 19:09:24  colin
# moved to business
#
# Revision 1.3  2002/10/25 07:31:06  jano
# using new method for converitng arguments from command line
#
# Revision 1.2  2002/10/24 11:51:26  colin
# Testing in London Red Hat/Sub Cobalt server
#
# Revision 1.1  2002/08/11 11:44:27  colin
# first version
# scripts written for and tested on Debian exim server
#
################################################################################

################################################################################
# includes
use strict;
use Exim;
use Site;
################################################################################

################################################################################
# variable declarations
# the name of the list
my $LIST_NAME;
# array of usernames for the list
my @USER_NAMES = ();

################################################################################

################################################################################
# function prototypes
sub describeCommandLine();
sub parseCommandLine();
sub setList();
################################################################################

################################################################################
# main routine
# if the command line parsing fails or the user specifies he wants help, then
# bring up the help screen
if(!parseCommandLine()) {
  describeCommandLine();
  die "\n";
# otherwise rock & roll
} else {
  setList();
}
################################################################################

################################################################################
# describeCommandLine: print out command line options.
# params:
#        NONE
# returns:
#        NONE
sub describeCommandLine() {
  print "\n";
  print "                                 --- setList ---\n";
  print "          ivata's tool to add or change a mailing list in exim systems.\n";
  print "\n";
  print "       You need perl installed on your system to use this tool.\n";
  print "\n";
  print " Usage: \n";
  print "       setList {listname} {user1} {user2} {user3}...\n";
  print "\n";
  print " Key:\n";
  print "  listname      name of the list to create or amend.\n";
  print "  user          user name to add to the list. This parameter should be repeated\n";
  print "                for every user in the list.\n";
  print "\n";
}


################################################################################
# parseCommandLine: this converts all of the command line options to the
#     variables.
# params:
#        NONE
# returns:
#        a boolean telling you whether to continue or not. non-zero = continue
sub parseCommandLine() {
  my $total = @ARGV;
  if($total < 2) {
    return 0;
  }
  $LIST_NAME = convertCommandLine(shift @ARGV);

  my $user;
  while($user = shift @ARGV) {
    # check the user exists
    my $noUser = checkUserExists(convertCommandLine($user));
    die $noUser if($noUser);
    # we got a live one here :-)
    push(@USER_NAMES, convertCommandLine($user));
  }
  return -1;
}

################################################################################
# setList: add or amend a mailing list
# params:
#        NONE
# returns:
#        NONE
sub setList() {
  my $user;
  open(LIST, ">${LIST_DIRECTORY}${LIST_NAME}") || die "Cannot open '${LIST_DIRECTORY}${LIST_NAME}': $!";
  foreach $user (@USER_NAMES) {
    print LIST "$user\n";
  }
  close(LIST) ;
}
################################################################################
