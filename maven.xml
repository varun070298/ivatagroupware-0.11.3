<?xml version="1.0"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2001 - 2005 ivata limited.
// All rights reserved.
// =========================================================
// ivata groupware may be redistributed under the GNU General Public
// License as published by the Free Software Foundation;
// version 2 of the License.
//
// These programs are free software; you can redistribute them and/or
// modify them under the terms of the GNU General Public License
// as published by the Free Software Foundation; version 2 of the License.
//
// These programs are distributed in the hope that they will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
//
// See the GNU General Public License in the file LICENSE.txt for more
// details.
//
// If you would like a copy of the GNU General Public License write to
//
// Free Software Foundation, Inc.
// 59 Temple Place - Suite 330
// Boston, MA 02111-1307, USA.
//
//
// To arrange commercial support and licensing, contact ivata at
//                  http://www.ivata.com/contact.jsp
//
////////////////////////////////////////////////////////////////////////////////
//
// $Log: maven.xml,v $
// Revision 1.2  2005/04/09 17:18:01  colinmacleod
// Changed copyright text to GPL v2 explicitly.
//
// Revision 1.1.1.1  2005/03/10 17:47:39  colinmacleod
// Restructured ivata op around Hibernate/PicoContainer.
// Renamed ivata groupware.
//
// Revision 1.3  2004/03/21 21:15:50  colinmacleod
// Shortened name to ivata op.
//
// Revision 1.2  2004/02/02 22:38:52  colinmacleod
// Added copyright notice
//
////////////////////////////////////////////////////////////////////////////////
-->

<project
    xmlns:ant="jelly:ant"
    xmlns:j="jelly:core"
    default="multiproject:install">
  <preGoal name="xdoc:jelly-transform">
    <!-- generate a faq from XML -->
    <attainGoal name="faq"/>
  </preGoal>
  <!--
    after building eclipse unpack the build resources and use the stylesheeet
    to transform the classpath XML file.
  -->
  <postGoal name="eclipse">
    <!-- don't do this for the build resources themselves! -->
    <j:if test="${pom.id != 'ivatagroupware:ivatagroupware-build'}">
      <attainGoal name="unpack-build-resources"/>
      <!-- hack to make xalan work "as is"-->
      ${systemScope.setProperty('javax.xml.transform.TransformerFactory',
        'org.apache.xalan.processor.TransformerFactoryImpl')}
      <!-- apply the ivata masks conversions, then the ivata groupware ones -->
      <ant:style
          in="${basedir}/.classpath"
          out="${basedir}/.classpath2"
          style="${maven.build.dir}/im-build/eclipseProjects.xsl" processor="trax">
        <ant:param name="currentVersion" expression="${ivatamasks-version}"/>
      </ant:style>
      <ant:move file="${basedir}/.classpath2" tofile="${basedir}/.classpath"/>
      <ant:style
          in="${basedir}/.classpath"
          out="${basedir}/.classpath2"
          style="${maven.build.dir}/igw-build/eclipseProjects.xsl" processor="trax">
        <ant:param name="currentVersion" expression="${pom.currentVersion}"/>
      </ant:style>
      <ant:move file="${basedir}/.classpath2" tofile="${basedir}/.classpath"/>
    </j:if>
  </postGoal>
  <!-- extract shared build resources such as XSLT -->
  <goal name="unpack-build-resources">
    <ant:mkdir
        dir="${maven.build.dir}/build"/>
    <!-- these are ivata masks build resources -->
    <ant:unjar
        src="${maven.repo.local}/ivatamasks/jars/ivatamasks-build-${ivatamasks.version}.jar"
        dest="${maven.build.dir}/im-build"/>
    <!-- these are ivata groupware build resources -->
    <ant:unjar
        src="${maven.repo.local}/ivatagroupware/jars/ivatagroupware-build-${pom.currentVersion}.jar"
        dest="${maven.build.dir}/igw-build"/>
  </goal>
</project>

